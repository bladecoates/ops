---
# tasks file for ops-pyenv
- name: set pyenv bashrc content fact
  set_fact:
    pyenv_shell_content: "{{ lookup('template', 'templates/pyenv.shell.config.j2') }}"
  tags:
    - "install"
    - "uninstall"

- name: set pyenv begin.profile content fact
  set_fact:
    pyenv_begin_profile_content: "{{ lookup('template', 'templates/pyenv.begin.profile.j2') }}"
  tags:
    - "install"
    - "uninstall"

- name: set pyenv end.profile content fact
  set_fact:
    pyenv_end_profile_content: "{{ lookup('template', 'templates/pyenv.end.profile.j2') }}"
  tags:
    - "install"
    - "uninstall"

- name: install pyenv
  block:
    - name: install pyenv
      shell:
        cmd: curl https://pyenv.run | bash
        creates: "{{ user_home }}/.pyenv/bin/pyenv"
      when: ansible_os_family != 'Darwin'

    - name: add pyenv to bashrc
      blockinfile:
        block: "{{ pyenv_shell_content }}"
        marker: "# {mark} RMS TOOLS MANAGED BLOCK (pyenv.shell.config)"
        path: "{% if ansible_user_shell == '/bin/bash' %}~/.bashrc{% elif ansible_user_shell == 'zsh'%}~/.zshrc{% endif %}"
      when: ansible_os_family != 'Darwin'

    - name: add pyenv to bashrc
      blockinfile:
        block: "{{ pyenv_shell_content }}"
        marker: "# {mark} RMS TOOLS MANAGED BLOCK (pyenv.shell.config)"
        path: "{% if ansible_user_shell == '/bin/bash' %}~/.bash_profile{% elif ansible_user_shell == 'zsh'%}~/.zshrc{% endif %}"
      when: ansible_os_family == 'Darwin'

    - name: add pyenv to begin.profile
      blockinfile:
        block: "{{ pyenv_begin_profile_content }}"
        marker: "# {mark} RMS TOOLS MANAGED BLOCK (pyenv.begin.profile)"
        path: "{% if ansible_user_shell == '/bin/bash' %}~/.profile{% elif ansible_user_shell == 'zsh'%}~/.zshrc{% endif %}"
        insertbefore: BOF
      when: ansible_os_family != 'Darwin'

    - name: add pyenv to begin.profile
      blockinfile:
        block: "{{ pyenv_begin_profile_content }}"
        marker: "# {mark} RMS TOOLS MANAGED BLOCK (pyenv.begin.profile)"
        path: "{% if ansible_user_shell == '/bin/bash' %}~/.bash_profile{% elif ansible_user_shell == 'zsh'%}~/.zshrc{% endif %}"
        insertbefore: BOF
      when: ansible_os_family == 'Darwin'

    - name: add pyenv to end.profile
      blockinfile:
        block: "{{ pyenv_end_profile_content }}"
        marker: "# {mark} RMS TOOLS MANAGED BLOCK (pyenv.end.profile)"
        path: "{% if ansible_user_shell == '/bin/bash' %}~/.profile{% elif ansible_user_shell == 'zsh'%}~/.zshrc{% endif %}"
        insertafter: EOF
      when: ansible_os_family != 'Darwin'

    - name: add pyenv to end.profile
      blockinfile:
        block: "{{ pyenv_end_profile_content }}"
        marker: "# {mark} RMS TOOLS MANAGED BLOCK (pyenv.end.profile)"
        path: "{% if ansible_user_shell == '/bin/bash' %}~/.bash_profile{% elif ansible_user_shell == 'zsh'%}~/.zshrc{% endif %}"
        insertafter: EOF
      when: ansible_os_family == 'Darwin'
  tags:
    - "install"

- name: uninstall pyenv
  block:
    - name: uninstall pyenv
      file:
        path: "{{ user_home }}/.pyenv"
        state: absent
      when: ansible_os_family != 'Darwin'

    - name: remove pyenv from bashrc
      blockinfile:
        block: "{{ pyenv_shell_content }}"
        marker: "# {mark} RMS TOOLS MANAGED BLOCK (pyenv.shell.config)"
        path: "{% if ansible_user_shell == '/bin/bash' %}~/.bashrc{% elif ansible_user_shell == 'zsh'%}~/.zshrc{% endif %}"
        state: absent
      when: ansible_os_family != 'Darwin'

    - name: remove pyenv from bashrc
      blockinfile:
        block: "{{ pyenv_shell_content }}"
        marker: "# {mark} RMS TOOLS MANAGED BLOCK (pyenv.shell.config)"
        path: "{% if ansible_user_shell == '/bin/bash' %}~/.bash_profile{% elif ansible_user_shell == 'zsh'%}~/.zshrc{% endif %}"
        state: absent
      when: ansible_os_family == 'Darwin'

    - name: remove pyenv from begin.profile
      blockinfile:
        block: "{{ pyenv_begin_profile_content }}"
        marker: "# {mark} RMS TOOLS MANAGED BLOCK (pyenv.begin.profile)"
        path: "{% if ansible_user_shell == '/bin/bash' %}~/.profile{% elif ansible_user_shell == 'zsh'%}~/.zshrc{% endif %}"
        insertbefore: BOF
        state: absent
      when: ansible_os_family != 'Darwin'

    - name: remove pyenv from begin.profile
      blockinfile:
        block: "{{ pyenv_begin_profile_content }}"
        marker: "# {mark} RMS TOOLS MANAGED BLOCK (pyenv.begin.profile)"
        path: "{% if ansible_user_shell == '/bin/bash' %}~/.bash_profile{% elif ansible_user_shell == 'zsh'%}~/.zshrc{% endif %}"
        insertbefore: BOF
        state: absent
      when: ansible_os_family == 'Darwin'

    - name: remove pyenv from end.profile
      blockinfile:
        block: "{{ pyenv_end_profile_content }}"
        marker: "# {mark} RMS TOOLS MANAGED BLOCK (pyenv.end.profile)"
        path: "{% if ansible_user_shell == '/bin/bash' %}~/.profile{% elif ansible_user_shell == 'zsh'%}~/.zshrc{% endif %}"
        insertafter: EOF
        state: absent
      when: ansible_os_family != 'Darwin'

    - name: remove pyenv from end.profile
      blockinfile:
        block: "{{ pyenv_end_profile_content }}"
        marker: "# {mark} RMS TOOLS MANAGED BLOCK (pyenv.end.profile)"
        path: "{% if ansible_user_shell == '/bin/bash' %}~/.bash_profile{% elif ansible_user_shell == 'zsh'%}~/.zshrc{% endif %}"
        insertafter: EOF
        state: absent
      when: ansible_os_family == 'Darwin'
  tags:
    - "uninstall"
    - "never"